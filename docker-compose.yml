services:
    laravel-matos:
        build:
            context: ./vendor/laravel/sail/runtimes/8.3
            dockerfile: Dockerfile
            args:
                WWWGROUP: ${WWWGROUP}
        image: sail-8.3/app
        extra_hosts:
            - host.docker.internal:host-gateway
        labels:
            # This is enableing treafik to proxy this service
            - traefik.enable=true
            # Here we have to define the URL
            # More details https://doc.traefik.io/traefik/v2.0/routing/routers/#rule
            - traefik.http.routers.laravel-matos.rule=Host(`matos.pierreleroyer.fr`) && PathPrefix(`/api`)
            # Here we are defining wich entrypoint should be used by clients to access this service
            - traefik.http.routers.laravel-matos.entrypoints=websecure
            # Here we define in wich network treafik can find this service
            # This is the port that traefik should proxy
            - traefik.http.services.laravel-matos.loadbalancer.server.port=80
            - traefik.http.routers.laravel-matos.tls=true
            - traefik.http.routers.laravel-matos.tls.certresolver=letsencrypt
            - traefik.docker.network=websecure
        ports:
            - ${APP_PORT:-80}:80
        environment:
            WWWUSER: ${WWWUSER}
            LARAVEL_SAIL: 1
            XDEBUG_MODE: ${SAIL_XDEBUG_MODE:-off}
            XDEBUG_CONFIG: ${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}
            IGNITION_LOCAL_SITES_PATH: ${PWD}
        volumes:
            - .:/var/www/html
        networks:
            - sail
            - web
    pgsql:
        image: postgres:17
        ports:
            - ${FORWARD_DB_PORT:-5432}:5432
        environment:
            PGPASSWORD: ${DB_PASSWORD:-secret}
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD:-secret}
        volumes:
            - sail-pgsql:/var/lib/postgresql/data
            - ./vendor/laravel/sail/database/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - pg_isready
                - -q
                - -d
                - ${DB_DATABASE}
                - -U
                - ${DB_USERNAME}
            retries: 3
            timeout: 5s
networks:
    sail:
        driver: bridge
    web:
        external: true
volumes:
    sail-pgsql:
        driver: local
